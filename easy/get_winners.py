# -*- coding: utf-8 -*-

"""
Вы — разработчик игры и у вас есть три уровня.
За их прохождение даётся различное кол-во очков,
оно указано в mult_round = (100, 300, 550).

Вам необходимо написать функцию, которая будет считать
трёх игроков с максимальным счётом.

На вход идёт словарь типа :
    - Имя игрока: результаты раунда (массив).

Массив может быть разным из-за ошибки вычисления или
если игрок вышел во время раунда
(пустой массив или меньше трёх элементов).

Подсчёт идёт за счёт перемножения количества убитых
врагов и количества очков за раунд.

data = {'player1': [4, 2, 3], 'player2': [9, 0, 5], 'player3': [19, 0], 'player4': []}
get_winners(data) -> ['player2', 'player1', 'player3']

data = {'player1': [4, 2, 3, 6], 'player2': [], 'player3': [19, 0], 'player4': []}
get_winners(data) -> ['player1', 'player3']
"""

mult_round = (100, 300, 550)

def get_winners(data: dict) -> list:
    # Проход по всем ключам и значениям словаря.
    for key, value in data.items():
        # Каждому ключу присваивается результат вычислений очков.
        data[key] = sum(item1 * item2
                        for item1, item2 in zip(mult_round, value))

           # Добавление в список значений.
    return [item
            # Проход по ключам словаря отсортированных по их значениям
            # в убывающем порядке.
            for item in sorted(data, key=data.get, reverse=True)
            # Фильтрация ключей, будут добавлены если их значения больше нуля.
            # И делается срез по первым трём элементам.
            if data.get(item)][:3]



tests = (({'player1': [4, 2, 3], 'player2': [9, 0, 5], 'player3': [19, 0], 'player4': []},
         ['player2', 'player1', 'player3']),

         ({'player1': [4, 2, 3, 6], 'player2': [], 'player3': [19, 0], 'player4': []},
         ['player1', 'player3']))

for data, check in tests:
    print(get_winners(data=data) == check)

