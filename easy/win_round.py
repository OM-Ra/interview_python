'''
У вас и вашего соперника есть по 5 самодельных карт.
Каждая карта помечена какой-нибудь цифрой от 0 до 9
(случайным образом, повторы возможны).
Выигрывает тот, кто сумел составить наибольшее двузначное
число из имеющихся у него цифр.

Напишите функцию, которая будет принимать два списка из 5 цифр
каждый (первый — ваш, второй — вашего соперника) и возвращать True,
если в этом раунде побеждаете вы.
В случае ничьей или победы соперника возвращается False.

Разбор примера
win_round([2, 5, 2, 6, 9], [3, 7, 3, 1, 2]) ➞ True
# Из ваших цифр можно составить число 96
# Ваш соперник может составить число 73
# В этом раунде побеждаете вы, потому что 96 > 73

Примеры
win_round([2, 5, 2, 6, 9], [3, 7, 3, 1, 2])  True
win_round([1, 2, 3, 4, 5], [9, 8, 7, 6, 5])  False
win_round([4, 3, 4, 4, 5], [3, 2, 5, 4, 1])  False
'''

from typing import List

def win_round(arr1: List[int], arr2: List[int]) -> bool:
    '''
    Проверяет можно ли из списка arr1 составить двузначное
    число больше чем двузначное число из списка arr2.
    '''
    # Сортировка списков от большего к меньшему
    arr1 = sorted(arr1, reverse=True)
    arr2 = sorted(arr2, reverse=True)
    # Составление двузначного чисела для каждого
    # списка из первых двух элементов списка.
    nbr1 = int(''.join(map(str, arr1[:2])))
    nbr2 = int(''.join(map(str, arr2[:2])))
    # Сравнение полученных чисел
    return nbr1 > nbr2



tests = (([2, 5, 2, 6, 9], [3, 7, 3, 1, 2], True),
         ([1, 2, 3, 4, 5], [9, 8, 7, 6, 5], False),
         ([4, 3, 4, 4, 5], [3, 2, 5, 4, 1], False))

for arr1, arr2, check in tests:
    print(win_round(arr1=arr1, arr2=arr2) == check)

