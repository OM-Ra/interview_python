# -*- coding: utf-8 -*-

'''
Ваша задача — написать функцию, которая переводит число во
время в читабельном виде. Вы можете быть уверены, что
число будет не меньше 0 и не больше 8639999. 

Число необходимо перевести в день, часы, минуты и секунды.

И дополнительной задачей является — забота о выводе.
Слово "день" подбирается на основе кол-ва дней, а часы,
минуты и секунды должны заполняться нулями при одноцифровых
значениях.

Пример:

to_readable(0) -> 0 дней, 00:00:00
to_readable(224930) -> 2 дня, 14:28:50
to_readable(466289) -> 5 дней, 09:31:29
to_readable(8639999) -> 99 дней, 23:59:59
'''

NAME_DAYS = {
    '0': 'дней',
    '1': 'день',
    '2': 'дня',
    '3': 'дня',
    '4': 'дня',
    '5': 'дней',
    '6': 'дней',
    '7': 'дней',
    '8': 'дней',
    '9': 'дней'
}

MINETS = 60
HOUR = MINETS * 60
DAY = HOUR * 24

def get_day(day: int) -> str:
    if 10 < day < 20:
        return 'дней'
    return NAME_DAYS.get(str(day)[-1], 'дней')

def to_readable(sec: int) -> str:
    # Вычисление дней, часов и минут.
    day = sec // DAY
    hour = (sec % DAY) // HOUR
    minets = (sec % HOUR) // MINETS

    # Форматирование конечного результата.
    return f'{day} {get_day(day)}, {hour:02}:{minets:02}:{sec % MINETS:02}'


# Тесты.
tests = ((0, '0 дней, 00:00:00'),
    (224930, '2 дня, 14:28:50'),
    (466289, '5 дней, 09:31:29'),
    (8639999, '99 дней, 23:59:59'),
    (11 * DAY + 5 * HOUR + 4 * MINETS + 3, '11 дней, 05:04:03'))

for index, item in enumerate(tests):
    res = to_readable(sec=item[0])
    assert res == item[1], f'test:{index:>02} >>> {item[0]} -> {res} != {item[1]}'

