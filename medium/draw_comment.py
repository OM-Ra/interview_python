# -*- coding: utf-8 -*-

'''
Ваша задача — написать программу для создания блоков комментариев.
Результат должен быть таким же, как и на картинке выше.

Можете усложнить задачу, добавив больше возможностей для кастомизации
(другие символе вместо пробела, другой размер и так далее).
'''

def draw_comment(txt: str, raw_size: int =35, sym: str =' ') -> str:
    '''
    Возвращает строку txt в закоментированном виде:
    ###############################################
    #[       sym       ]txt[        sym          ]#
    ###############################################

    raw_size - ширина рамки.

    sym - символ заполнения пустот.
    '''
    txt = txt.split('\n')
    res = ['#' * raw_size]
    for line in txt:
        res.append('#{line:{sym}^{raw}}#'.format(line=line, sym=sym, raw=raw_size - 2))
    res.append(res[0])
    return '\n'.join(res)



txts = (('Hello, World.', 35, ' ', """###################################
#          Hello, World.          #
###################################"""),
        ('Test text.\nPrototype text.', 35, ' ', """###################################
#           Test text.            #
#         Prototype text.         #
###################################"""),
        ('Hello, World.', 45, '*', """#############################################
#***************Hello, World.***************#
#############################################"""))

for txt, raw_size, sym, check in txts:
    print(draw_comment(txt=txt, raw_size=raw_size, sym=sym) == check)

