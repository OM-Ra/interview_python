# -*- coding: utf-8 -*-

'''
Годится ли гора для восхождения?

Напишите функцию, которая будет принимать список чисел,
представляющих отдельные высоты горы, и определять,
годится ли такая гора для восхождения на нее.

Пригодными для восхождения горами будем считать те,
где разница между соседними высотами не превышает 5 единиц.

Примечание. Список может начинаться с любого числа и быть любой длины.

Примеры:

is_scalable([1, 2, 4, 6, 7, 8]) True
is_scalable([40, 45, 50, 45, 47, 52]) True
is_scalable([2, 9, 11, 10, 18, 21]) False
'''

from typing import List

def is_scalable(arr: List[int]) -> bool:
    if arr:
        # Сравнение разности вершин по модулю и возврат результата.
        return all(abs(arr[pos] - arr[pos + 1]) <= 5
                   # Проход по иднексам списка (на один индекс меньше).
                   for pos in range(len(arr) - 1))
    return False


# Тесты.
tests = (
    ([1, 2, 4, 6, 7, 8], True),
    ([40, 45, 50, 45, 47, 52], True),
    ([2, 9, 11, 10, 18, 21], False),
    ([40, 45, 50, 45, 47, 52, 70], False),
    ([5, 9, 11, 10, 12, 11, 15], True),
    ([40, 45, 51, 46, 47, 52], False),
    ([], False)
)

for index, item in enumerate(tests):
    res = is_scalable(arr=item[0])
    assert res == item[1], f'tests:{index:>02} >>> {item[0]} -> {res} != {item[1]}'

