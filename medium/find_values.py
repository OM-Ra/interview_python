# -*- coding: utf-8 -*-

'''
Ваша задача — написать функцию, которая принимает неограниченное
количество массивов и возвращает только те элементы,
что есть в каждом списке.

Пример:

find_values([5, 6, 11, 10, 8], [2, 3, 5, 11], [11, 2]) -> [11]
find_values([11, 10, 3], [10, 3, 5, 11], [11, 10]) -> [11, 10]
find_values([8, 4, 7, "hi"], [8, "hi"], [4, "hi"]) -> ["hi"]
find_values([1, 4, 3], [6, 2, 8], ["4", "hi"]) -> []
'''

from functools import reduce

def find_values(*args: list) -> list:
    '''
    Возвращает список элементов которые присутствуют
    в каждом списске.
    '''
    # set.intersection - возвращает множество содержащее
    # пересечение двух множеств
    return list(reduce(set.intersection, map(set, args)))



args = ((([5, 6, 11, 10, 8], [2, 3, 5, 11], [11, 2]), {11}),
        (([11, 10, 3], [10, 3, 5, 11], [11, 10]), {11, 10}),
        (([8, 4, 7, "hi"], [8, "hi"], [4, "hi"]), {'hi'}),
        (([1, 4, 3], [6, 2, 8], ["4", "hi"]), set()))

for arg, check in args:
    print(set(find_values(*arg)) == check)

